/ Financial Statements Section
= turbo_frame_tag 'financial_statements_content' do
  #financial-statements-section
    .container
      
      / Header with Refresh Button
      = render Workspace::RefreshDataComponent.new(link_path: refresh_financial_statements_company_workspace_path(workspace), icon: "activity", title: "Financial Statements", description: "Comprehensive financial data and analytics")
      
      - if workspace.financial_statements.any?
        - active_tab = local_assigns[:active_tab] || params[:statement_tab] || 'income'
        
        / Tab Navigation
        .border-b.border-gray-200.mb-8
          .flex.space-x-8
            = link_to financial_statements_tab_company_workspace_path(workspace, statement_tab: 'income'), data: { turbo_frame: 'financial_statements_content' }, class: "tab-link pb-4 px-1 border-b-2 font-medium text-sm focus:outline-none transition-colors duration-200 #{'border-blue-500 text-blue-600' if active_tab == 'income'} #{'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' if active_tab != 'income'}" do
              = icon "banknote-arrow-up", library: "lucide", class: "w-4 h-4 inline mr-2"
              | Income Statement
            = link_to financial_statements_tab_company_workspace_path(workspace, statement_tab: 'balance'), data: { turbo_frame: 'financial_statements_content' }, class: "tab-link pb-4 px-1 border-b-2 font-medium text-sm focus:outline-none transition-colors duration-200 #{'border-blue-500 text-blue-600' if active_tab == 'balance'} #{'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' if active_tab != 'balance'}" do
              = icon "scale", library: "lucide", class: "w-4 h-4 inline mr-2"
              | Balance Sheet
            = link_to financial_statements_tab_company_workspace_path(workspace, statement_tab: 'cashflow'), data: { turbo_frame: 'financial_statements_content' }, class: "tab-link pb-4 px-1 border-b-2 font-medium text-sm focus:outline-none transition-colors duration-200 #{'border-blue-500 text-blue-600' if active_tab == 'cashflow'} #{'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' if active_tab != 'cashflow'}" do
              = icon "banknote", library: "lucide", class: "w-4 h-4 inline mr-2"
              | Cash Flow

        / Tab Content
        - case active_tab
        - when 'income'
          .space-y-4
            - workspace.financial_statements.where(statement_type: 'income_statement').order(year: :desc).limit(5).each_with_index do |statement, index|
              .bg-gradient-to-r.from-gray-50.to-gray-100.rounded-xl.p-5.border.border-gray-200.hover:shadow-md.transition-all.duration-300
                .flex.justify-between.items-start.mb-4
                  .space-y-1
                    .flex.items-center.space-x-2
                      h4.text-lg.font-bold.text-gray-900 = statement.year
                      - unless statement.period == 'annual'
                        .px-2.py-1.bg-purple-100.text-purple-700.text-xs.font-medium.rounded-full.uppercase = statement.period
                  .flex.items-center
                    - if index == 0
                      .px-2.py-1.bg-green-100.text-green-700.text-xs.font-medium.rounded-full Latest

                .grid.grid-cols-2.md:grid-cols-4.gap-4
                  - if statement.revenue.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Revenue
                      .text-lg.font-bold.text-gray-900 = number_to_currency(statement.revenue, precision: 0)
                  - if statement.gross_profit.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Gross Profit
                      .text-lg.font-bold.text-green-600 = number_to_currency(statement.gross_profit, precision: 0)
                  - if statement.operating_income.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Operating Income
                      .text-lg.font-bold.text-blue-600 = number_to_currency(statement.operating_income, precision: 0)
                  - if statement.net_income.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Net Income
                      .text-lg.font-bold class=(statement.net_income >= 0 ? "text-green-600" : "text-red-600")
                        = number_to_currency(statement.net_income, precision: 0)
                  - if statement.eps.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide EPS
                      .text-lg.font-bold.text-purple-600 $#{statement.eps}

        - when 'balance'
          .space-y-4
            - workspace.financial_statements.where(statement_type: 'balance_sheet').order(year: :desc).limit(5).each_with_index do |statement, index|
              .bg-gradient-to-r.from-blue-50.to-indigo-50.rounded-xl.p-5.border.border-blue-200.hover:shadow-md.transition-all.duration-300
                .flex.justify-between.items-start.mb-4
                  .space-y-1
                    .flex.items-center.space-x-2
                      h4.text-lg.font-bold.text-gray-900 = statement.year
                      - unless statement.period == 'annual'
                        .px-2.py-1.bg-blue-100.text-blue-700.text-xs.font-medium.rounded-full.uppercase = statement.period
                  .flex.items-center
                    - if index == 0
                      .px-2.py-1.bg-green-100.text-green-700.text-xs.font-medium.rounded-full Latest

                .grid.grid-cols-2.md:grid-cols-3.gap-4
                  - if statement.total_assets.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Total Assets
                      .text-lg.font-bold.text-gray-900 = number_to_currency(statement.total_assets, precision: 0)
                  - if statement.total_debt.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Total Debt
                      .text-lg.font-bold.text-red-600 = number_to_currency(statement.total_debt, precision: 0)
                  - if statement.shareholders_equity.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Shareholders' Equity
                      .text-lg.font-bold.text-green-600 = number_to_currency(statement.shareholders_equity, precision: 0)

        - when 'cashflow'
          .space-y-4
            - workspace.financial_statements.where(statement_type: 'cash_flow_statement').order(year: :desc).limit(5).each_with_index do |statement, index|
              .bg-gradient-to-r.from-green-50.to-emerald-50.rounded-xl.p-5.border.border-green-200.hover:shadow-md.transition-all.duration-300
                .flex.justify-between.items-start.mb-4
                  .space-y-1
                    .flex.items-center.space-x-2
                      h4.text-lg.font-bold.text-gray-900 = statement.year
                      - unless statement.period == 'annual'
                        .px-2.py-1.bg-green-100.text-green-700.text-xs.font-medium.rounded-full.uppercase = statement.period
                  .flex.items-center
                    - if index == 0
                      .px-2.py-1.bg-green-100.text-green-700.text-xs.font-medium.rounded-full Latest

                .grid.grid-cols-2.md:grid-cols-2.gap-4
                  - if statement.operating_cash_flow.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Operating Cash Flow
                      .text-lg.font-bold class=(statement.operating_cash_flow >= 0 ? "text-green-600" : "text-red-600")
                        = number_to_currency(statement.operating_cash_flow, precision: 0)
                  - if statement.free_cash_flow.present?
                    .space-y-2
                      .text-xs.font-medium.text-gray-500.uppercase.tracking-wide Free Cash Flow
                      .text-lg.font-bold class=(statement.free_cash_flow >= 0 ? "text-green-600" : "text-red-600")
                        = number_to_currency(statement.free_cash_flow, precision: 0)

      - else
        .text-center.py-16
          .text-gray-400.mb-6
            svg.w-16.h-16.mx-auto[fill="none" stroke="currentColor" viewBox="0 0 24 24"]
              path[stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"]
          h3.text-xl.font-semibold.text-gray-900.mb-2 No Financial Data Available
          p.text-gray-500.mb-6 Financial statement data will appear here once it's been processed for this company.
          = button_to refresh_financial_statements_company_workspace_path(workspace), method: :post, class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200", form: { data: { turbo_frame: "workspace-content" } } do
            svg.w-4.h-4.mr-2[fill="none" stroke="currentColor" viewBox="0 0 24 24"]
              path[stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"]
            | Refresh Data

css:
  .tab-link {
    cursor: pointer;
    user-select: none;
  }